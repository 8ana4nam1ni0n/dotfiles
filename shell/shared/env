#!/bin/sh

export XDG_CONFIG_HOME=$HOME/.config
export TOOL_PATH=$HOME/Tools

# Node Version Manager (NVM)
export NVM_DIR="$HOME/.config/nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Python Version Manager (PyENV)
export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

# Load pyenv-virtualenv
eval "$(pyenv virtualenv-init -)"

# go programming language
export PATH=/usr/local/go/bin:$PATH

# rust programming language
. "$HOME/.cargo/env"

# haskell programming language ghcup-env
[ -f "/home/sharp/.ghcup/env" ] && source "/home/sharp/.ghcup/env"

# fzf
# grabs fzf file for current running shell
FZF_SHELL_CONFIG=~/.fzf.$( ps -p $$ | tail +2 | awk '{print $4}' | tr -d '-' )

# source fzf
[ -f $FZF_SHELL_CONFIG ] && . $FZF_SHELL_CONFIG || echo "NO FZF CONFIG FOUND"

# define how fzf looks
export FZF_DEFAULT_COMMAND='fd --type f --hidden'
export FZF_DEFAULT_OPTS='--layout=default --no-height'
export FZF_CTRL_T_COMMAND="${FZF_DEFAULT_COMMAND}"
export FZF_CTRL_T_OPTS='--layout=default'
export FZF_ALT_C_COMMAND='fd --type d --hidden'
export FZF_ALT_C_OPTS='--layout=default'

# For docker rootless mode
export PATH=/home/sharp/bin:$PATH
export DOCKER_HOST=unix:///run/user/1000/docker.sock

# Java Home
export JAVA_HOME="$(dirname $(dirname $(readlink -f $(which java))))"
# Maven
export PATH=/usr/local/apache-maven-3.9.5/bin:$PATH
